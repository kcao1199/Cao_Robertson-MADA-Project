---
title: "Exploratory Analysis on CDC Teen Vaccination Surveys"
date: 02/21/2024
Author: Kelly Cao and Rachel Robertson
output: html_document
editor: 
  markdown: 
    wrap: sentence
---

The following file will load the cleaned data and perform some exploration.

The categorical and numerical variables of interest will be plotted and placed in models for analysis.

## Loading the Packages and Data Set

```{r, warnings=FALSE, message=FALSE}
#load needed packages. make sure they are installed.
library(here) #for data loading/saving
library(dplyr)
library(skimr)
library(ggplot2)
library(knitr)
```

```{r}
#Path to data. Note the use of the here() package and not absolute paths
data_location <- here::here("data","processed-data","cleandata1.rds")
#load data
mydata <- readRDS(data_location)
```

## Showing Summary of Overall Data Set

The following data set has been cleaned.
Any observations with NAs has been removed.

```{r}
summary_df = skimr::skim(mydata)
print(summary_df)
# save to file
summarytable_file = here("results","tables", "summarytable.rds")
saveRDS(summary_df, file = summarytable_file)
```

## Addressing Numerical Data Set

The distribution of the numerical income to poverty ratio can be shown below.
It displays a value from 1-3.
A ratio displaying less than 1 depicts an income less than the poverty level.
Any income ratio \>1 indicates an income greater than the poverty level.
Most of the observations were gathered from households with income ratios of 3, as shown by the skewed plot below.

```{r}
p1 <- mydata %>% 
  ggplot(aes(x = INCPORAR_I)) +  
  geom_histogram(binwidth = 1, color = "black", fill = "skyblue") +  # Adjust binwidth as needed
  xlab("Income to Poverty Ratio") +                  
  ylab("Count") +                                    
  ggtitle("Income-to-Poverty Ratio Variable Distribution") +
  theme_minimal() +  # Apply a minimal theme for cleaner appearance
  theme(
    plot.title = element_text(size = 14, face = "bold"),  # Customize title font size and style
    axis.title.x = element_text(size = 12),              # Customize x-axis label font size
    axis.title.y = element_text(size = 12),              # Customize y-axis label font size
    axis.text = element_text(size = 10),                 # Customize axis text font size
    legend.position = "none",                            # Remove legend if not needed
    panel.grid.major = element_line(color = "lightgray"), # Add light gray grid lines
    panel.grid.minor = element_blank()                   # Remove minor grid lines
  ) +
  labs(caption = "(Originally INCPORAR_I)")

p1
figure_file = here("results", "figures", "income.png")
ggsave(filename = figure_file, plot=p1) 
```

## Addressing Categorical Data

The state variable shows a more uniformed distribution, suggesting that the observations were gathered fairly across the US states and territory.
Although it is noted a few territories provides 0 observations.

```{r}
summary(mydata$STATE)
state_distribution <- table(mydata$STATE)
# Convert STATE to character
mydata$STATE <- as.character(mydata$STATE)

# Calculate distribution percentage
state_distribution_percentage <- prop.table(table(mydata$STATE))*100

print(state_distribution_percentage)

p2 <- barplot(state_distribution_percentage, 
        main = "State Distribution Percentage", 
        xlab = "State", 
        ylab = "Percentage",
        col = "skyblue",   # Set bar color
        las = 2) 
#Recreating the graph in ggplot

#adjusting the percent disitrbution data into a data frame
data_df <- as.data.frame(as.table(state_distribution_percentage))

#plot with ggplot
p3 <- ggplot(data_df, aes(x = Var1, y = Freq)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "State Distribution Percentage",
       x = "State",
       y = "Percentage") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5))

#Viewing the plot to confirm it is done properly
print(p3)

figure_file = here("results", "figures", "state.distribution.png")
ggsave(filename = figure_file, plot=p3) 

```

The family income variable provides a more normal distribution with the majority of the observation coming from \$75000+ income level.

```{r}
summary(mydata$INCQ298A)
Family_income_distribution <- table(mydata$INCQ298A)

# Calculate distribution percentage
Family_Income_distribution <- prop.table(table(mydata$INCQ298A))*100

print(Family_Income_distribution)


p4 <- barplot(Family_Income_distribution, 
              main = "Family Income Distribution Percentage", 
              xlab = "Income levels", 
              ylab = "Percentage",
              col = "skyblue",   # Set bar color
              las = 2) +
      theme(axis.text.x = element_text(angle = 90, vjust = 0.5))

#Recreating the graph in ggplot

#adjusting the percent disitrbution data into a data frame
family_income_df <- as.data.frame(as.table(Family_Income_distribution))

#plot with ggplot
p5 <- ggplot(family_income_df, aes(x = Var1, y = Freq)) +
  geom_bar(stat = "identity", fill = "skyblue", color = "black") +  # black borders
  labs(title = "Household Income Variable Distribution",
       x = "Income",
       y = "Percentage (%)") +
  theme_minimal() +  # Minimalistic theme
  labs(caption = "(Originally INCQ298A)") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1),  # Rotate x-axis labels
        axis.line = element_line(color = "black"),           # Black axes
        panel.grid.major = element_blank(),                  # Remove major gridlines
        panel.grid.minor = element_blank(),                  # Remove minor gridlines
        panel.border = element_blank())                      # Remove panel borders

#Viewing the plot to confirm it is done properly
print(p5)

figure_file = here("results", "figures", "family.income.distribution.png")
ggsave(filename = figure_file, plot=p5) 

```

The race and ethnicity variables show a distribution that is similar to the U.S. census data, which concludes that the racial composition of the U.S. is 58.9% white, 13.6% African American, and 19.1% Hispanic or Latino.

```{r}
summary(mydata$RACEETHK)
ethnicity_distribution <- table(mydata$RACEETHK)

# Calculate distribution percentage
Ethnicity_distribution <- prop.table(table(mydata$RACEETHK))*100

print(Ethnicity_distribution)


p6 <- barplot(Ethnicity_distribution, 
              main = "Ethnicity Distribution Percentage", 
              xlab = "Ethnicity", 
              ylab = "Percentage",
              col = "skyblue",   # Set bar color
              las = 2) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
#Recreating the graph in ggplot

#adjusting the percent disitrbution data into a data frame
ethnicity_df <- as.data.frame(as.table(Ethnicity_distribution))

#plot with ggplot
p7 <- ggplot(ethnicity_df, aes(x = Var1, y = Freq)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "Ethnicity Distribution Percentage",
       x = "Ethnicity",
       y = "Percentage")

#Viewing the plot to confirm it is done properly
print(p7)

figure_file = here("results", "figures", "ethnicity.distribution.png")
ggsave(filename = figure_file, plot=p7) 


```

```{r}
summary(mydata$RACE_K)
race_distribution <- table(mydata$RACE_K)

# Calculate distribution percentage
Race_distribution <- prop.table(table(mydata$RACE_K))*100

print(Race_distribution)


p8 <- barplot(Race_distribution, 
              main = "Race Distribution Percentage", 
              xlab = "Race", 
              ylab = "Percentage",
              col = "skyblue",   # Set bar color
              las = 2) 
#Recreating the graph in ggplot

#adjusting the percent disitrbution data into a data frame
race_df <- as.data.frame(as.table(Race_distribution))

#plot with ggplot
p9 <- ggplot(race_df, aes(x = Var1, y = Freq)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "Race Distribution Percentage",
       x = "Race",
       y = "Percentage")

#Viewing the plot to confirm it is done properly
print(p9)

figure_file = here("results", "figures", "race.distribution.png")
ggsave(filename = figure_file, plot=p9)
```

The Insurance status variable shows that the majority of the observations came from households with private insurance only. This is followed by any medicaid and then other insurance.
This is mirrored in the facility variable, where a majority of its observations show private facilities being the location.

```{r}
summary(mydata$INS_STAT2_I)
insurance_status_distribution <- table(mydata$INS_STAT2_I)

# Calculate distribution percentage
Insurance_distribution <- prop.table(table(mydata$INS_STAT2_I))*100

print(Insurance_distribution)


p10 <- barplot(Insurance_distribution, 
              main = "Insurance Status Distribution Percentage", 
              xlab = "Insurance Status", 
              ylab = "Percentage",
              col = "skyblue",   # Set bar color
              las = 2) 
#Recreating the graph in ggplot

#adjusting the percent disitrbution data into a data frame
insurance_df <- as.data.frame(as.table(Insurance_distribution))

#plot with ggplot
p11 <- ggplot(insurance_df, aes(x = Var1, y = Freq)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "Insurance Status Distribution Percentage",
       x = "Insurance Status",
       y = "Percentage")

#Viewing the plot to confirm it is done properly
print(p11)

figure_file = here("results", "figures", "insurance.status.distribution.png")
ggsave(filename = figure_file, plot=p11) 
```

```{r}
summary(mydata$FACILITY)
Facility_distribution <- table(mydata$FACILITY)

# Calculate distribution percentage
Facility_distribution <- prop.table(table(mydata$FACILITY))*100

print(Facility_distribution)


p12 <- barplot(Facility_distribution, 
              main = "Facility Distribution Percentage", 
              xlab = "Facility", 
              ylab = "Percentage",
              col = "skyblue",   # Set bar color
              las = 2) +
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
#Recreating the graph in ggplot

#adjusting the percent disitrbution data into a data frame
facility_df <- as.data.frame(as.table(Facility_distribution))

#plot with ggplot
p13 <- ggplot(facility_df, aes(x = Var1, y = Freq)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "Facility Distribution Percentage",
       x = "Facility",
       y = "Percentage") +
  theme(axis.text.x = element_text(angle = 45, vjust = 0.5))

#Viewing the plot to confirm it is done properly
print(p13)

figure_file = here("results", "figures", "facility.distribution.png")
ggsave(filename = figure_file, plot=p13) 

```

The vaccination variable indicates nearly 80% of the observations had an Up-to-date status for the 1+ shot HPV vaccination.

```{r}
summary(mydata$P_UTDHPV)
Vaccination_status_distribution <- table(mydata$P_UTDHPV)

# Calculate distribution percentage
Vaccination_status_distribution <- prop.table(table(mydata$P_UTDHPV))*100

print(Vaccination_status_distribution)


p14 <- barplot(Vaccination_status_distribution, 
              main = "Vaccination Status Distribution Percentage", 
              xlab = "Vaccination Status", 
              ylab = "Percentage",
              col = "skyblue",   # Set bar color
              las = 2) 
#Recreating the graph in ggplot

#adjusting the percent disitrbution data into a data frame
Vaccine_df <- as.data.frame(as.table(Vaccination_status_distribution))

#plot with ggplot
p15 <- ggplot(Vaccine_df, aes(x = Var1, y = Freq)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "Vaccination Status Distribution Percentage",
       x = "Vaccination Status",
       y = "Percentage")

#Viewing the plot to confirm it is done properly
print(p15)

figure_file = here("results", "figures", "vaccination.status.distribution.png")
ggsave(filename = figure_file, plot=p15) 
```

We examine the percentage of up-to-date vaccination status by state.
```{r}
#Aggregate vaccine status stratified by state
vaccine_state_percent <- mydata %>%
  group_by(STATE) %>%
  summarise(percentage_UTD = sum(P_UTDHPV == "UTD") / n() * 100)

#Create table to display only up-to-date status in percents for each state
table1 <- mydata %>%
  filter(P_UTDHPV == "UTD") %>%
  count(STATE) %>%
  rename(UTD_count = n) %>%
  left_join(vaccine_state_percent, by = "STATE") %>%
  select(STATE, percentage_UTD) %>%
  arrange(STATE)

#Print the table
kable(table1, caption = "Vaccine Distribution Percentage per State (Only 'UTD' Status)")

#Write the table to save to the results
write.table(table1, file = here("results","tables", "state-vaccine-completion.txt"), sep = "\t", row.names = FALSE)

```


```{r}
#Stratifying the HPV vaccine completion by facility
##Make a stacked bar plot to compare which facilities reported UTD patients
p18 <- ggplot(mydata, aes(x = P_UTDHPV, fill = FACILITY)) +
  geom_bar(stat = "count") +  
  labs(x = "Vaccination Status", y = "Count", caption = "UTD = Up-to-Date", title = "Facility Vaccination Completion") +
  theme_minimal()
  print(p18)

#Save the bar plot
figure_file <- here("results", "figures", "facility-vaccination.png")
ggsave(filename = figure_file, plot = p18, width = 8, height = 6, dpi = 300)

```

```{r}
#Aggregate total count per each race-ethnicity factor level
total_count_by_race <- mydata %>%
  group_by(RACEETHK) %>%
  summarise(total_count = n())

#Aggregate count of those with UTD status for each race-enthnicity factor level
UTD_by_race <- mydata %>%
  filter(P_UTDHPV == "UTD") %>%
  group_by(RACEETHK) %>%
  summarise(UTD_count = n())

#Merge the total count and UTD count data frames
vaccine_percent_by_race <- total_count_by_race %>%
  left_join(UTD_by_race, by = "RACEETHK") %>%
  mutate(percentage_UTD = UTD_count / total_count * 100)

# Print the table
kable(vaccine_percent_by_race, caption = "Percentage of UTD Vaccination Status by RACEETHK")

# Save the table as a text file
write.table(vaccine_percent_by_race, file = here("results", "tables", "vaccine_percent_by_race.txt"), sep = "\t", row.names = FALSE)

```
## Model and Plot Fitting

### Fit 1

A boxplot is created with income-poverty ratio to vaccination status.
The box plot indicates little difference between the two status.
A statistical model is fitted to the same variables.
A p-value of 0.1358 suggests there is little significance between the income-poverty variable and the vaccination status.

```{r}
#Stratifying the Income-poverty levels to the vaccination status in a boxplot figure
p16 <- mydata %>% ggplot(aes(x=P_UTDHPV, y=INCPORAR_I)) + geom_boxplot()
plot(p16)
figure_file = here("results","figures", "income-vaccination.png")
ggsave(filename = figure_file, plot=p16) 

# Fitting Income-poverty levels and Vaccination status to a statistical model
model <- lm(INCPORAR_I ~ P_UTDHPV, data = mydata)
summary(model)

```

### Fit 2

A boxplot is created with income-poverty ratio to insurance status.
The box plot indicates there are distinct difference between the two status.
A statistical model is fitted to the same variables.
The p-value of \< 2.26e-16 suggests there is statistical significance between the income-poverty variable and the insurance status.

```{r}
#Stratifying the Income-poverty levels to the insurance status in a boxplot figure
original_labels <- levels(mydata$INS_STAT2_I)
print(original_labels)

p17 <- mydata %>% 
  ggplot(aes(x = INS_STAT2_I, y = INCPORAR_I, color = P_UTDHPV)) +  
  geom_boxplot() +
  labs(x = "Insurance status",
       y = "Income-to-Poverty ratio",
       title = "Income-to-Poverty Ratio Stratified by Insurance and Vaccination Status", 
       color = "Vaccination Status", 
       caption = "UTD refers to Up-to-Date vaccination status") +  
  scale_x_discrete(
    labels = c("PRIVATE INSURANCE ONLY" = "Private",
               "ANY MEDICAID" = "Medicaid",
               "OTHER INSURANCE (CHIP, IHS, MILITARY, OR OTHER, ALONE OR IN COMB. WITH PRIVATE INSURANCE)" = "Other",
               "UNINSURED" = "Uninsured")) +
  theme(axis.text.x = element_text(angle = 0, vjust = 0.5))  # Rotate x-axis text by 90 degrees

print(p17)


figure_file = here("results","figures", "insurance-income-stratified.png")
ggsave(filename = figure_file, plot=p17) 

# Fitting Income-poverty levels and insurance status to a statistical model
model <- lm(INCPORAR_I ~ INS_STAT2_I, data = mydata)
summary(model)
```

### Fit 3
```{r}
# Fitting Income-poverty levels and insurance status to a statistical model
model <- lm(INCPORAR_I ~ P_UTDHPV, INS_STAT2_I, data = mydata)
summary(model)
```

### Fit 4
```{r}
#Stratifying the HPV vaccine completion by both Race-Ethnicity and (choose either insurance or income-poverty status)
p19 <- mydata %>% 
  ggplot(aes(x=INCPORAR_I, y=RACEETHK, color = P_UTDHPV)) +
  geom_boxplot()+
  labs(title = "HPV Vaccination Status",
       x = "Income-to-Poverty Ratio",
       y = "Race/Ethnicity", 
       caption = "A ratio equal to 1, suggests income and poverty levels are the same.", 
       color = "Vaccination Status")
plot(p19)
figure_file = here("results","figures", "raceeth-income-stratified.png")
ggsave(filename = figure_file, plot=p19) 

# Fitting Income-poverty levels and insurance status to a statistical model
model <- lm(INCPORAR_I ~ P_UTDHPV, RACEETHK, data = mydata)
summary(model)

```